import { HTMLSource } from './HTMLSource';
var init = require('snabbdom-to-html/init');
var modulesForHTML = require('snabbdom-to-html/modules');
var defaultModules = [
    modulesForHTML.attributes,
    modulesForHTML.props,
    modulesForHTML.class,
    modulesForHTML.style,
];
function reportSnabbdomError(err) {
    console.error(err);
}
export function makeHTMLDriver(effect, options) {
    if (!options) {
        options = {};
    }
    var modules = options.modules || defaultModules;
    var toHTML = init(modules);
    function htmlDriver(vnode$, name) {
        var html$ = vnode$.map(function (vdom) {
            if (typeof vdom !== 'object') {
                throw new Error('Expected virtual dom tree, not ' + typeof vdom);
            }
            else {
                return toHTML(vdom);
            }
        });
        html$.addListener({
            next: effect,
            error: reportSnabbdomError,
        });
        return new HTMLSource(html$, name);
    }
    return htmlDriver;
}
//# sourceMappingURL=makeHTMLDriver.js.map